<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>20</x>
      <y>270</y>
      <w>470</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/AbstractDbHandler/
--
/~AbstractDbHandler()/

/+ saveObject(QObject *) : bool/
/+ updateObject(QObject *) : bool/
/+ readObject(ObjectType, QUuid) : QVariantMap/
/+ readObjectRange(ObjectType, int, int) : QList&lt;QVariantMap&gt;/
/+ readAllObjects(ObjectType) : QList&lt;QVariantMap&gt;/
/+ removeObject(QObject *) : bool/

/+ beginTransaction() : void/
/+ rollbackTransaction() : void/
/+ commitTransaction() : void/

/+ saver() : DatabaseVisitor */
/+ updater() : DatabaseVisitor */
/+ deleter() : DatabaseVisitor */
--
&lt;&lt;enum&gt;&gt;
ObjectType
+ Profile
+ Ingredient
+ RecipeIngredient
+ Recipe</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>610</x>
      <y>270</y>
      <w>360</w>
      <h>410</h>
    </coordinates>
    <panel_attributes>SqliteDbHandler
--
- m_db : QSqlDatabase
--
- createTables() : void
- openDatabase() : void
- closeDatabase() : void
--
&lt;&lt;inner classes inherit AbstractSqliteVisitor&gt;&gt;
{innerclass
SqliteSaver
innerclass}
{innerclass
SqliteUpdater
innerclass}
{innerclass
SqliteDeleter
innerclass}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1090</x>
      <y>270</y>
      <w>290</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
/DatabaseVisitor/
--
/+ ~DatabaseVisitor()/

/+ visit(QProfile *) : void/
/+ visit(QIngredient *) : void/
/+ visit(QRecipeIngredient *) : void/
/+ visit(QRecipe *) : void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>210</x>
      <y>150</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>QObject</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>250</x>
      <y>170</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>340</y>
      <w>150</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>960</x>
      <y>340</y>
      <w>150</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>550</x>
      <y>120</y>
      <w>450</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>style=wordwrap
The database is only responsible for fetching data and throwing it in a variantmap, let the factories handle the actual objects themselves</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
